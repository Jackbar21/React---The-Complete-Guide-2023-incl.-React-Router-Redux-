{"ast":null,"code":"var _jsxFileName = \"/Users/alejandro/Downloads/01-starting-setup/src/components/Expenses/ExpensesChart/ExpensesChart.js\";\nimport React, { useState } from \"react\";\nimport Chart from \"../../Chart/Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpressChart = props => {\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const chartDataPoints = months.map(monthName => ({\n    label: monthName,\n    value: 0\n  }));\n  const {\n    expenses\n  } = props;\n  for (const expense in expenses) {\n    const expenseIndex = new Date(expense.date).getMonth();\n    chartDataPoints[expenseIndex].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpressChart;\nexport default ExpressChart;\nvar _c;\n$RefreshReg$(_c, \"ExpressChart\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","ExpressChart","props","months","chartDataPoints","map","monthName","label","value","expenses","expense","expenseIndex","Date","date","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alejandro/Downloads/01-starting-setup/src/components/Expenses/ExpensesChart/ExpensesChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"../../Chart/Chart/Chart\";\n\nconst ExpressChart = (props) => {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const chartDataPoints = months.map((monthName) => ({\n    label: monthName,\n    value: 0,\n  }));\n\n  const { expenses } = props;\n  for (const expense in expenses) {\n    const expenseIndex = new Date(expense.date).getMonth();\n\n    chartDataPoints[expenseIndex].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpressChart;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,MAAM,GAAG,CACb,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;EAED,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAG,CAAEC,SAAS,KAAM;IACjDC,KAAK,EAAED,SAAS;IAChBE,KAAK,EAAE;EACT,CAAC,CAAC,CAAC;EAEH,MAAM;IAAEC;EAAS,CAAC,GAAGP,KAAK;EAC1B,KAAK,MAAMQ,OAAO,IAAID,QAAQ,EAAE;IAC9B,MAAME,YAAY,GAAG,IAAIC,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC;IAEtDV,eAAe,CAACO,YAAY,CAAC,CAACH,KAAK,IAAIE,OAAO,CAACK,MAAM;EACvD;EAEA,oBAAOf,OAAA,CAACF,KAAK;IAACkB,UAAU,EAAEZ;EAAgB;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GA7BIpB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}